version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: ccpay-postgres
    environment:
      POSTGRES_DB: ccpay_db
      POSTGRES_USER: ccpay_user
      POSTGRES_PASSWORD: ccpay_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - ccpay-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ccpay_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: ccpay-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ccpay-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: ccpay-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ccpay-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: ccpay-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - ccpay-network
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 10s
      retries: 5

  mailhog:
    image: mailhog/mailhog
    container_name: ccpay-mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - ccpay-network

  api-gateway:
    build:
      context: ../api-gateway
      dockerfile: Dockerfile
    container_name: ccpay-api-gateway
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      REDIS_HOST: redis
    depends_on:
      - redis
    networks:
      - ccpay-network

  auth-service:
    build:
      context: ../auth-service
      dockerfile: Dockerfile
    container_name: ccpay-auth-service
    ports:
      - "8081:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgres
      DB_NAME: ccpay_auth
      REDIS_HOST: redis
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      JWT_SECRET: 404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
    depends_on:
      - postgres
      - redis
      - kafka
      - mailhog
    networks:
      - ccpay-network

  user-service:
    build:
      context: ../user-service
      dockerfile: Dockerfile
    container_name: ccpay-user-service
    ports:
      - "8082:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgres
      DB_NAME: ccpay_user
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - postgres
      - kafka
    networks:
      - ccpay-network

  wallet-service:
    build:
      context: ../wallet-service
      dockerfile: Dockerfile
    container_name: ccpay-wallet-service
    ports:
      - "8083:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgres
      DB_NAME: ccpay_wallet
      REDIS_HOST: redis
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - ccpay-network

networks:
  ccpay-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: